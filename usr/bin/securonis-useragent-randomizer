#!/bin/bash

# Create a directory for the user agent settings if it doesn't exist
mkdir -p /etc/securonis/useragent

# Common user agents to rotate through
USER_AGENTS=(
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.107 Safari/537.36"
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.1.1 Safari/605.1.15"
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0"
    "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.114 Safari/537.36"
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36 Edg/91.0.864.59"
)

# Function to randomize user agent
randomize_user_agent() {
    # Select a random user agent from the array
    RANDOM_INDEX=$((RANDOM % ${#USER_AGENTS[@]}))
    SELECTED_UA="${USER_AGENTS[$RANDOM_INDEX]}"
    
    # Save the selected user agent to a file
    echo "DEFAULT_USER_AGENT=\"$SELECTED_UA\"" > /etc/securonis/useragent/current
    
    # Create a Firefox override if Firefox directory exists
    if [ -d /etc/firefox/pref ]; then
        mkdir -p /etc/firefox/pref
        echo 'pref("general.useragent.override", "'"$SELECTED_UA"'");' > /etc/firefox/pref/local-settings.js
    fi
    
    # Create a Chrome override if Chrome directory exists
    if [ -d /etc/opt/chrome/policies/managed ]; then
        mkdir -p /etc/opt/chrome/policies/managed
        echo '{
  "UserAgentOverride": "'"$SELECTED_UA"'"
}' > /etc/opt/chrome/policies/managed/useragent.json
    fi
    
    # Sleep for a random period between 1-3 hours before changing again
    sleep $((RANDOM % 7200 + 3600))
}

# Main loop to continuously randomize user agent
while true; do
    randomize_user_agent
done
